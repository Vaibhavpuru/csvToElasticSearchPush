/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradle.java.elastic;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.http.HttpHost;
import org.elasticsearch.client.Client;
import org.elasticsearch.client.RestClient;
import org.elasticsearch.common.transport.TransportAddress;
import org.elasticsearch.transport.client.PreBuiltTransportClient;
import org.elasticsearch.action.index.IndexResponse;
import org.elasticsearch.client.Client;
import org.elasticsearch.common.settings.Settings;
import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.bean.CsvToBean;
import au.com.bytecode.opencsv.bean.HeaderColumnNameTranslateMappingStrategy;
import co.elastic.clients.elasticsearch.ElasticsearchClient;
import co.elastic.clients.elasticsearch.core.IndexRequest;
import co.elastic.clients.json.jackson.JacksonJsonpMapper;
import co.elastic.clients.transport.ElasticsearchTransport;
import co.elastic.clients.transport.rest_client.RestClientTransport;
import gradle.java.elastic.model.Column;

public class Library {
    public static void storeData(List<Column> colData) throws UnknownHostException {
    	
    	RestClient restClient = RestClient.builder(
    		    new HttpHost("localhost", 9200)).build();
    	
    	ElasticsearchTransport transport = new RestClientTransport(
    		    restClient, new JacksonJsonpMapper());
    	
    	// And create the API client
    	ElasticsearchClient client = new ElasticsearchClient(transport);
    	
         List<Column>columnList=extractCsv();
         Map<String, Column> result=new HashMap<String,Column>();
         Integer count=0;
         for(Column a: columnList) {
        	 result.put(count+"",a);
        	 count++;
         }
         
        IndexResponse response = getClient().prepareIndex("test1","data","3").setSource(result).get();
        // Output response
    }
    
    public static Client getClient() throws UnknownHostException {
        Client client = new PreBuiltTransportClient(
                Settings.builder().put("client.transport.sniff", true)
                        .put("cluster.name","elasticsearch").build())
                .addTransportAddresses(new TransportAddress(InetAddress.getByName("host2"), 9300));
        return client;
}
    
    public static List<Column> extractCsv(){
    	Map<String, String> columnMapper=new HashMap<String,String>();
    	
    	columnMapper.put("col1", "Col1");
    	columnMapper.put("col2", "Col2");
    	columnMapper.put("col3", "Col3");
    	columnMapper.put("col4", "Col4");
    	columnMapper.put("col5", "Col5");
    	
    	HeaderColumnNameTranslateMappingStrategy<Column> strategy =
                new HeaderColumnNameTranslateMappingStrategy<Column>();
    	
    	 strategy.setType(Column.class);
         strategy.setColumnMapping(columnMapper);
   
         // Create castobaen and csvreader object
         CSVReader csvReader = null;
         
         // TODO Create a Sample csv
         try {
             csvReader = new CSVReader(new FileReader
             ("C:\\Users\\vaibhav sharma\\Desktop\\bb-Ela\\gradle-java-elastic\\src\\main\\resources\\data.csv"));
         }
         catch (FileNotFoundException e) {
   
             // TODO Auto-generated catch block
             e.printStackTrace();
         }
         
         
         CsvToBean csvToBean = new CsvToBean();
         List<Column> columnList = csvToBean.parse(strategy, csvReader);
         
         // call the parse method of CsvToBean
         // pass strategy, csvReader to parse method
         	    	
    	return columnList;
    }
    
    public static void main(String args[]) throws UnknownHostException {
    	System.out.println("Working");
    	
    	// Extract data from CSV
    	List<Column> column= extractCsv();
    	// Connect Elastic search and store data
    	storeData(column);
    	
    	
    	// Search Database 
    }
}
